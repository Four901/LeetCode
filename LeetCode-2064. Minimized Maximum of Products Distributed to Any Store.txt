class Solution {
public:
    int isit(int &n,vector<int>&q,int mid)
    {
        int count=0;
        for(int i=0;i<q.size();i++)
        {
            count+=q[i]/mid;
            if(q[i]%mid!=0&&mid<=q[i])count++;
        }
        
        return count>=n;
    }
    int minimizedMaximum(int n, vector<int>& q)
    {
        int low=1;
        int high=1e5;
        int ans=high;
        int mid;
        while(low<=high)
        {
             mid=(low+high)/2;
        //    cout<<low<<" "<<high<<" "<<mid<<endl;
            
             int count=0;
        for(int i=0;i<q.size();i++)
        {
            count+=q[i]/mid;
            if(q[i]%mid!=0)count++;
        }
           
            
            if(count<=n)
            {
                ans=mid;
                high=mid-1;
            }
            else if(count>n)
            {
                 
                low=mid+1;
            }
            
        }
        return ans;
    }
};