/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class FindElements {
public:
    TreeNode*main;
    void makeMyTree(TreeNode*root)
    {
        if(root==NULL)return ;
        if(root->left){root->left->val=root->val*2+1;makeMyTree(root->left);}
        if(root->right){root->right->val=root->val*2+2;makeMyTree(root->right);}
        
    }
    FindElements(TreeNode* root) 
    {
        main=root;
        root->val=0;
        makeMyTree(root);
    }
   
    bool find(int target)
    {
      string path="";
      while(target>0)
      {
          if(target%2==0)
          {
              path="R"+path;
              target-=2;
              
          }
          else
          {
              path="L"+path;
              target--;
          }
          target=target/2;
      }
      TreeNode*point=main;
      for(int i=0;i<path.length();i++)
      {
          if(point==NULL)return false;
          if(path[i]=='L')
          {
              point=point->left;
          }
          else
          {
              point=point->right;
          }
      }
        if(point==NULL)return false;
        return true;
    }
};

/**
 * Your FindElements object will be instantiated and called as such:
 * FindElements* obj = new FindElements(root);
 * bool param_1 = obj->find(target);
 */