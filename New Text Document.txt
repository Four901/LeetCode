class Solution {
public:

    int minimumOperations(vector<int>& nums, int start, int goal)
    {
        
        queue<pair<int,int>>qu;
        qu.push({start,0});
        vector<int>vis(10001,0);
        while(qu.size())
        {
            int x=qu.front().first;
            int ops=qu.front().second;
            qu.pop();
            if(x==goal)
            {
              
                return ops;
              
            }
            if(x<0||x>1000)continue;
            if(vis[x]==1)continue;
            vis[x]=1;
            
            for(int i=0;i<nums.size();i++)
            {
                qu.push({(x +nums[i]),ops+1});
                qu.push({x-nums[i],ops+1});
                qu.push({(x ^nums[i]),ops+1});
            }
            
            
        }
        return -1;
    }
};